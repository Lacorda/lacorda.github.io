{"version":3,"sources":["webpack:///./src/demo/views/index/closure.vue?29e2","webpack:///./src/mixins/copy-text.js","webpack:///src/demo/views/index/closure.vue","webpack:///./src/demo/views/index/closure.vue?7ee3","webpack:///./src/demo/views/index/closure.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","on","withLet","_v","copyVar","_l","btn","idx","key","staticClass","_s","forWith","ref","staticRenderFns","methods","copyToClip","content","message","aux","document","createElement","setAttribute","body","appendChild","select","execCommand","removeChild","$alert","component"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,aAAa,CAACA,EAAG,WAAW,CAACE,GAAG,CAAC,MAAQN,EAAIO,UAAU,CAACP,EAAIQ,GAAG,WAAWJ,EAAG,WAAW,CAACE,GAAG,CAAC,MAAQN,EAAIS,UAAU,CAACT,EAAIQ,GAAG,eAAeR,EAAIU,GAAIV,EAAQ,MAAE,SAASW,EAAIC,GAAK,OAAOR,EAAG,WAAW,CAACS,IAAID,EAAIE,YAAY,OAAO,CAACd,EAAIQ,GAAG,KAAKR,EAAIe,GAAGH,EAAI,SAAQR,EAAG,MAAM,CAACU,YAAY,oBAAoB,CAACV,EAAG,KAAK,CAACJ,EAAIQ,GAAG,OAAOR,EAAIe,GAAGf,EAAIgB,SAAS,QAAQZ,EAAG,KAAK,CAACJ,EAAIQ,GAAGR,EAAIe,GAAmB,QAAhBf,EAAIgB,QAAoB,WAAa,UAAUZ,EAAG,MAAM,CAACa,IAAI,cAAc,IAC9hBC,EAAkB,GCDP,GACXC,QAAS,CACLC,WADK,SACMC,EAASC,GAChB,IAAMC,EAAMC,SAASC,cAAc,SACnCF,EAAIG,aAAa,QAASL,GAC1BG,SAASG,KAAKC,YAAYL,GAC1BA,EAAIM,SACJL,SAASM,YAAY,QACrBN,SAASG,KAAKI,YAAYR,GACX,MAAXD,EACArB,KAAK+B,OAAO,QAEZ/B,KAAK+B,OAAOV,MCI5B,GACE,OAAF,IACE,KAFF,WAGI,MAAJ,CACM,KAAN,aACM,QAAN,QAGE,QARF,WASI,KAAJ,WAEE,QAAF,CACI,QADJ,WAEM,KAAN,cAGM,IAFA,IAAN,yCACA,oBAHA,WAIA,GACQ,EAAR,sBACU,IAAV,gCACU,EAAV,YACU,EAAV,iBAJA,oBAAQ,EAAR,IAQI,QAbJ,WAcM,KAAN,cACM,IAAN,kTAQM,KAAN,iBClD4T,I,YCOxTW,EAAY,eACd,EACAlC,EACAmB,GACA,EACA,KACA,KACA,MAIa,aAAAe,E","file":"js/chunk-2d0b5fb3.7b1ad92b.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('RContainer',[_c('ElButton',{on:{\"click\":_vm.withLet}},[_vm._v(\"let循环\")]),_c('ElButton',{on:{\"click\":_vm.copyVar}},[_vm._v(\"复制var循环代码\")]),_vm._l((_vm.btns),function(btn,idx){return _c('ElButton',{key:idx,staticClass:\"btn\"},[_vm._v(\"按钮\"+_vm._s(idx+1))])}),_c('div',{staticClass:\"output-container\"},[_c('h3',[_vm._v(\"当前使用\"+_vm._s(_vm.forWith)+\"循环\")]),_c('h3',[_vm._v(_vm._s(_vm.forWith === 'var' ? '输出：控制台查看' : '输出：'))]),_c('div',{ref:\"output\"})])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default {\n    methods: {\n        copyToClip(content, message) {\n            const aux = document.createElement('input');\n            aux.setAttribute('value', content);\n            document.body.appendChild(aux);\n            aux.select();\n            document.execCommand('copy');\n            document.body.removeChild(aux);\n            if (message == null) {\n                this.$alert('复制成功');\n            } else {\n                this.$alert(message);\n            }\n        },\n    },\n};\n","<template>\n    <RContainer>\n        <ElButton @click=\"withLet\">let循环</ElButton>\n        <ElButton @click=\"copyVar\">复制var循环代码</ElButton>\n        <ElButton v-for=\"(btn, idx) in btns\" :key=\"idx\" class=\"btn\">按钮{{ idx+1 }}</ElButton>\n        <div class=\"output-container\">\n            <h3>当前使用{{ forWith }}循环</h3>\n            <h3>{{ forWith === 'var' ? '输出：控制台查看' : '输出：' }}</h3>\n            <div ref=\"output\" />\n        </div>\n    </RContainer>\n</template>\n\n<script>\nimport copyToClip from '@mixins/copy-text';\n\nexport default {\n    mixins: [copyToClip],\n    data() {\n        return {\n            btns: new Array(4),\n            forWith: 'let',\n        };\n    },\n    mounted() {\n        this.withLet();\n    },\n    methods: {\n        withLet() {\n            this.forWith = 'let';\n            const btns = document.getElementsByClassName('btn');\n            const $output = this.$refs.output;\n            for (let index = 0; index < btns.length; index += 1) {\n                btns[index].onclick = function () {\n                    const $div = document.createElement('div');\n                    $div.innerHTML = index;\n                    $output.appendChild($div);\n                };\n            }\n        },\n        copyVar() {\n            this.forWith = 'var';\n            const text = `\n                const btns = document.getElementsByClassName('btn');\n                for (var index = 0; index < btns.length; index += 1) {\n                    btns[index].onclick = function () {\n                        console.log(index);\n                    };\n                }\n            `;\n            this.copyToClip(text);\n        },\n    },\n};\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./closure.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./closure.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./closure.vue?vue&type=template&id=5b04b029&\"\nimport script from \"./closure.vue?vue&type=script&lang=js&\"\nexport * from \"./closure.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}